# int  object  demo  program
a = 25  #   Ref  'a'  points  to  object  25
print(a)  #   Value  of  object  'a'  i.e.  25
print(type(a))  #  <class  'int'>
print(id(a))  #   Address  of  object  'a'  (may  be  1000)
a = 999999999999999999999999999999999999999999999999999999999999999999999999999999999999  #   Valid
print(b)  #   999999999999999999999999999999999999999999999999999999999999999999999999999999999999  
#c = 75$  #  Error





'''
1) What  does  a = 25  do ? --->  Assigns  reference  'a'  to  int  object  25

2) a = 25
    What  is  25  called ?  ---> Object  i.e.  int  class  object
    What  is  'a'  called ?  ---> Reference

3) a = 25
    What  does  object   'a'  contain ?  --->  Integer  number  25
    What  does  reference  contain ?  --->  id  of  the  object (i.e.  Address)

4) What  is  the  name  of  object ?  --->  Reference  name  is  nothing  but  object  name
     If  reference  name  is  'a' , what  is  the  object  name  ?  ---> 'a'  itself

5) int  x  =  25
    Is  the  above  statement  valid ? --->  No  becoz  there  is  no  declaration  in  python
    Is  x = 25  valid ?  --->	Yes

6) What  does  print(object)  do  ?  --->  Prints  content  (or)  value  of  the  object
    What  does  type(object)  do  ? ---> Returns  type  of  the  object
    What  does   id(object)  do  ? --->  Returns  address  of  the  object

7) What  is  the  extension  to  python  program  file ?  --->  .py

8) How  to  run  a  python  program ?  --->  py  filename . py  (or)  python  filename . py

9) There  is  no  compilation  in  python  becoz  it  is  an  interpreter  language

10) In  other  words,  run  python  program  directly  without  any  prior  compilation
'''